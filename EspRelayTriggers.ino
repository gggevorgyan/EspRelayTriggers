#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/68273403-031d-4179-be15-31a533afd898 

  Arduino IoT Cloud Variables description

  The following variables are aut omatically generated and updated when changes are made to the Thing

  CloudSwitch irrigation_switch;
  CloudSwitch ventilation_switch;
  CloudPercentage windowSlider;
  CloudRelativeHumidity humidity;
  CloudTemperature temperature;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "pin_def.h"
#include "switch.h"
#include "slider.h"
#include <Preferences.h>


Preferences preferences;

///////////////////////// --- VENTILATION --- ////////////////////////////
SwitchRelays< PinWriter, StatusReader > ventSwitch("vent", VENTILATION_START_OUT_PIN,
                                                   VENTILATION_STOP_OUT_PIN,
                                                   &ventilationSwitch,
                                                   VENTILATION_STATUS_IN_PIN,
                                                   &preferences,
                                                   &defaultPinWriter,
                                                   &defaultStatusReader);
///////////////////////// --- IRRIGATION --- /////////////////////////////
SwitchRelays< PinWriter, StatusReader > irrigSwitch("irrg", IRRIGATION_START_OUT_PIN,
                                                    IRRIGATION_STOP_OUT_PIN,
                                                    &irrigationSwitch,
                                                    IRRIGATION_STATUS_IN_PIN,
                                                    &preferences,
                                                    &defaultPinWriter,
                                                    &defaultStatusReader);

/////////////////////////// --- WINDOW --- ////////////////////////////////
Slider3Relays< PinWriter, StatusReader > leftWindow("Lwnd",
                                                    L_WINDOW_UP_OUT_PIN,
                                                    L_WINDOW_DOWN_OUT_PIN,
                                                    L_WINDOW_STOP_OUT_PIN,
                                                    &leftWindowSlider,
                                                    L_WINDOW_UP_STATUS_IN_PIN,
                                                    L_WINDOW_DOWN_STATUS_IN_PIN,
                                                    &preferences,
                                                    &defaultPinWriter,
                                                    &defaultStatusReader);
/////////////////////////// --- WINDOW --- ////////////////////////////////
Slider3Relays< PinWriter, StatusReader > rightWindow("Rwnd",
                                                     R_WINDOW_UP_OUT_PIN,
                                                     R_WINDOW_DOWN_OUT_PIN,
                                                     R_WINDOW_STOP_OUT_PIN,
                                                     &rightWindowSlider,
                                                     R_WINDOW_UP_STATUS_IN_PIN,
                                                     R_WINDOW_DOWN_STATUS_IN_PIN,
                                                     &preferences,
                                                     &defaultPinWriter,
                                                     &defaultStatusReader);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  preferences.begin("RelayApp", false);

  init_pins();

  // Defined in thingProperties.h
  initProperties();

  leftWindow.initStatus();
  rightWindow.initStatus();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  //ArduinoCloud.printDebugInfo();
}


void loop() {

  ArduinoCloud.update();
  // Your code here
  ventSwitch.checkInTheLoop();
  //irrigationSwitch.checkInTheLoop();
  leftWindow.checkInTheLoop();
  rightWindow.checkInTheLoop();
  #ifdef ES32A08_BOARD
  defaultPinWriter.writeRegisters();
  defaultStatusReader.readInputsWithDigitalRead();
#endif

}

/*
  Since Slider is READ_WRITE variable, onSliderChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLeftWindowSliderChange() {
  leftWindow.Trigger();
}

/*
  Since VentilationSwitch is READ_WRITE variable, onVentilationSwitchChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onVentilationSwitchChange() {
  ventSwitch.Trigger();
}

/*
  Since IrrigationSwitch is READ_WRITE variable, onIrrigationSwitchChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onIrrigationSwitchChange() {
  irrigSwitch.Trigger();
}

/*
  Since Temperature is READ_WRITE variable, onTemperatureChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTemperatureChange() {
  // Add your code here to act upon Temperature change
}

/*
  Since RightWindowSlider is READ_WRITE variable, onRightWindowSliderChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onRightWindowSliderChange() {
  // Add your code here to act upon RightWindowSlider change
  rightWindow.Trigger();
}
